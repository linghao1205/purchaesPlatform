/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WarehouseRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PurchasingDepartment;
import Business.Organization.Warehouse;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Material;
import Business.WorkQueue.ProductionTestWorkRequest;
import Business.WorkQueue.Storage;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mac
 */
public class CompanyWarehouseWorkPlaceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CompanyWarehouseWorkPlaceJPanel
     */
    private JPanel container;
    private UserAccount account;
    private Warehouse organization;
    private Enterprise enterprise;
    
    public CompanyWarehouseWorkPlaceJPanel(JPanel container, UserAccount account, Warehouse organization, Enterprise enterprise) {
        initComponents();
        this.container = container;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        enterpriseLabel.setText(enterprise.getName());
        
        populateInventory();
        populateOrder();
    }
    
    public void populateInventory(){
        int n = 1;
        DefaultTableModel model = (DefaultTableModel) inventoryjTable.getModel();
        
        model.setRowCount(0);
        for (Storage s : organization.getInventory()){
            Object[] row = new Object[3];
            row[0] = n;
            row[1] = s;
            row[2] = s.getQuantity();
            n += 1; 
            model.addRow(row);
        }
            
    }
    
    public void populateOrder(){
        DefaultTableModel model = (DefaultTableModel) requiredMaterialjTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            ProductionTestWorkRequest r = (ProductionTestWorkRequest)request;
            if (r.getStatus().equals("Waiting")){
                Object[] row = new Object[3];
                row[0] = request;
                row[1] = request.getMaterial().getProductionModel();
                row[2] = request.getQuantity();
                
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryjTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requiredMaterialjTable = new javax.swing.JTable();
        manageBtn = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel1.setText("Enterprise: ");

        jLabel2.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel2.setText("Inventory Information");

        inventoryjTable.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        inventoryjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "StockNumber", "ProductModel", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inventoryjTable);
        if (inventoryjTable.getColumnModel().getColumnCount() > 0) {
            inventoryjTable.getColumnModel().getColumn(0).setResizable(false);
            inventoryjTable.getColumnModel().getColumn(1).setResizable(false);
            inventoryjTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel3.setText("Bill of Materials");

        requiredMaterialjTable.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        requiredMaterialjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ordernumber", "ProductModel", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requiredMaterialjTable);
        if (requiredMaterialjTable.getColumnModel().getColumnCount() > 0) {
            requiredMaterialjTable.getColumnModel().getColumn(0).setResizable(false);
            requiredMaterialjTable.getColumnModel().getColumn(1).setResizable(false);
            requiredMaterialjTable.getColumnModel().getColumn(2).setResizable(false);
        }

        manageBtn.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        manageBtn.setText("Manage Order");
        manageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageBtnActionPerformed(evt);
            }
        });

        checkBtn.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        checkBtn.setText("Check Inventory");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        enterpriseLabel.setText("<enterprise name>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(checkBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(manageBtn))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(102, 102, 102))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(128, 128, 128)))))))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBtn)
                    .addComponent(manageBtn))
                .addContainerGap(131, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requiredMaterialjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select any row");
            return;
        }
        
        ProductionTestWorkRequest newrequest = new ProductionTestWorkRequest();       
        ProductionTestWorkRequest request = (ProductionTestWorkRequest)requiredMaterialjTable.getValueAt(selectedRow, 0);
        
        boolean flag = false;
        for (Storage s : organization.getInventory()){
            if (request.getMaterial().getProductionModel().equals(s.getMaterial().getProductionModel())){
                flag = true;
                if (request.getQuantity() <= s.getQuantity()){
                    request.setStatus("Finished");
                    s.setQuantity(s.getQuantity()-request.getQuantity());
                    JOptionPane.showMessageDialog(null, "The order is Finished");
                }
                else {
                    request.setStatus("Processing");
                    newrequest.setStatus("Waiting");
                    newrequest.setMaterial(request.getMaterial());
                    newrequest.setQuantity(request.getQuantity()-s.getQuantity());
                    newrequest.setDeliveryNumber(request.getDeliveryNumber());
                    s.setQuantity(0);
                    JOptionPane.showMessageDialog(null, "Material request have been send to Purchasing Department");
                }
                break;
            }
        }
        
        if(!flag){
            request.setStatus("Processing");
            newrequest.setStatus("Waiting");
            newrequest.setMaterial(request.getMaterial());
            newrequest.setQuantity(request.getQuantity());  
            newrequest.setDeliveryNumber(request.getDeliveryNumber());
            JOptionPane.showMessageDialog(null, "Material request have been send to Purchasing Department");
        }
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PurchasingDepartment){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(newrequest);
            account.getWorkQueue().getWorkRequestList().add(newrequest);
        }
        
        populateInventory();
        populateOrder();
    }//GEN-LAST:event_checkBtnActionPerformed

    private void manageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageBtnActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        container.add("MaterialOrderJPanel", new OrderConfirmationJPanel(container, account, organization, enterprise));
        layout.next(container);
    }//GEN-LAST:event_manageBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JTable inventoryjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton manageBtn;
    private javax.swing.JTable requiredMaterialjTable;
    // End of variables declaration//GEN-END:variables
}
